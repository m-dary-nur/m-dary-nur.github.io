{"version":3,"sources":["pages lazy /^/.*$/ groupOptions: {} namespace object","components/Nav.tsx","components/Routes.tsx","helpers/history.ts","App.tsx","serviceWorker.ts","index.tsx","components/Icon.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","NavButton","memo","React","forwardRef","ref","isSection","icon","label","color","onClick","className","Icon","name","size","refs","screenRef","navs","useState","showNav","setNav","active","setActive","handle","currentSectionId","i","length","iRef","section","current","Element","getBoundingClientRect","top","useEffect","screen","addEventListener","removeEventListener","alt","prefix","title","old","onBlur","setTimeout","nav","key","scrollIntoView","behavior","to","target","download","Loading","style","spin","LazyLoader","props","Page","setPage","params","match","page","pageIntro","lazy","pageNav","x","charAt","toUpperCase","slice","height","fallback","p","n","location","pathname","withRouter","router","exact","path","render","history","createBrowserHistory","useRef","document","Boolean","window","hostname","ReactDOM","StrictMode","App","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","library","add","faHandHeart","faUserChart","faIdBadge","faTasks","faSpinnerThird","faHeart","faReact","faPhoneLaptop","faPencilRuler","faBug","faCode","faPhp","faNode","faJsSquare","faVuejs","faAngular","faCss3Alt","faSass","faLess","faStar","faBracketsCurly","faDesktop","faCss3","faServer","faDatabase","faBootstrap","faFire","faCopyright","faWhatsapp","faLinkedin","faEnvelope","faGithub","faBars","faFileDownload"],"mappings":"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","file":"static/js/main.0ebc233e.chunk.js","sourcesContent":["var map = {\n\t\"./About\": [\n\t\t23,\n\t\t2\n\t],\n\t\"./About.tsx\": [\n\t\t23,\n\t\t2\n\t],\n\t\"./Experience\": [\n\t\t25,\n\t\t3\n\t],\n\t\"./Experience.tsx\": [\n\t\t25,\n\t\t3\n\t],\n\t\"./Intro\": [\n\t\t22,\n\t\t4\n\t],\n\t\"./Intro.tsx\": [\n\t\t22,\n\t\t4\n\t],\n\t\"./Project\": [\n\t\t26,\n\t\t1\n\t],\n\t\"./Project.tsx\": [\n\t\t26,\n\t\t1\n\t],\n\t\"./Skill\": [\n\t\t24,\n\t\t5\n\t],\n\t\"./Skill.tsx\": [\n\t\t24,\n\t\t5\n\t],\n\t\"./Spa\": [\n\t\t27,\n\t\t0\n\t],\n\t\"./Spa.tsx\": [\n\t\t27,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 40;\nmodule.exports = webpackAsyncContext;","import React, { useState, useEffect, memo } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport Icon from \"./Icon\"\nimport { IconName } from \"@fortawesome/fontawesome-svg-core\"\n\ntype ButtonClickEvent = React.MouseEvent<HTMLButtonElement, MouseEvent>\n\ninterface INavProps {\n   refs: any\n   screenRef: any\n}\n\ninterface INavButtonProps {\n   ref?: React.Ref<HTMLDivElement>\n   icon: IconName\n   label: string\n   color: string\n   isSection: boolean\n   onClick: (e: ButtonClickEvent) => void\n}\n\ninterface INav {\n   label: string\n   icon: IconName\n   color: string\n}\n\nconst NavButton: React.FC<INavButtonProps> = memo(\n   React.forwardRef(({ isSection, icon, label, color, onClick }, ref: any) => (\n      <button\n         ref={ref}\n         onClick={onClick}\n         className={`w-full md:w-auto p-4 md:mx-2 md:py-1 cursor-pointer text-sm text-right md:text-center font-bold uppercase border-b-2 \n      ${isSection ? `text-${color} border-${color}` : \"border-transparent\"}\n      hover:border-${color} hover:text-${color} transition-all duration-200`}\n      >\n         <Icon name={icon} size=\"lg\" /> {label}\n      </button>\n   ))\n)\n\nconst Nav: React.FC<INavProps> = ({ refs, screenRef }) => {\n   const navs: INav[] = [\n      { label: \"intro\", icon: \"hand-heart\", color: \"profile-400\" },\n      { label: \"about\", icon: \"id-badge\", color: \"yellow-500\" },\n      { label: \"skill\", icon: \"brackets-curly\", color: \"purple-500\" },\n      { label: \"experience\", icon: \"user-chart\", color: \"green-500\" },\n      { label: \"project\", icon: \"tasks\", color: \"red-500\" },\n   ]\n\n   const [showNav, setNav] = useState<boolean>(false)\n\n   // ===============================================================================\n   const [active, setActive] = useState(0)\n\n   const handle = () => {\n      let currentSectionId = active\n      for (let i = 0; i < refs.length; i++) {\n         const iRef: React.MutableRefObject<any> = refs[i]\n         if (iRef) {\n            const section = iRef.current\n            if (!section || !(section instanceof Element)) continue\n            if (section.getBoundingClientRect().top - 61 < 0) {\n               currentSectionId = i\n               continue\n            }\n         }\n         break\n      }\n      setActive(currentSectionId)\n   }\n\n   useEffect(() => {\n      const myRef = screenRef\n      const screen: { addEventListener: any; removeEventListener: any } = myRef.current\n      screen.addEventListener(\"scroll\", handle)\n      return () => {\n         screen.removeEventListener(\"scroll\", handle)\n      }\n   })\n\n   // ===============================================================================\n\n   return (\n      <div className=\"w-full flex h-16 px-4 md:mx-auto justify-between items-center border-b border-gray-200\">\n         <h3 className=\"whitespace-no-wrap font-bold text-sm md:text-base\">\n            <code className=\"text-yellow-500 font-bold\">{\"{\"}</code> made with{\" \"}\n            <Icon name=\"heart\" className=\"text-red-500\" alt=\"love\" /> and{\" \"}\n            <Icon name=\"react\" prefix=\"fab\" className=\"text-profile-400\" alt=\"react\" /> +{\" \"}\n            <span className=\"pl-2 pr-1 font-bold text-white bg-profile cursor-default rounded\" title=\"typescript\">\n               ts\n            </span>{\" \"}\n            +{\" \"}\n            <span className=\"text-sm md:text-base\" title=\"tailwindcss\">\n               tailwindcss\n            </span>{\" \"}\n            <code className=\"text-yellow-500 font-bold\">{\"}\"}</code>\n         </h3>\n         <button\n            onClick={() => setNav(old => !old)}\n            onBlur={() => setTimeout(() => setNav(false), 200)}\n            className=\"block md:hidden\"\n         >\n            <Icon name=\"bars\" size=\"lg\" />\n         </button>\n         <div\n            className={`${\n               !showNav && \"hidden\"\n            } absolute bg-white w-full top-0 left-0 mt-16 md:mt-0 md:left-auto md:relative z-50 border-b border-gray-300`}\n         >\n            <div className=\"flex flex-col justify-end items-end z-50\">\n               {navs.map((nav, i) => (\n                  <NavButton\n                     ref={refs[i]}\n                     key={nav.label}\n                     isSection={active === i}\n                     onClick={() => refs[i].current.scrollIntoView({ behavior: \"smooth\" })}\n                     {...nav}\n                  />\n               ))}\n               <Link\n                  to=\"/files/M_DARY_NUR_RABBANI.pdf\"\n                  target=\"_blank\"\n                  download\n                  className=\"w-full no-underline p-4 cursor-pointer text-sm text-right font-bold text-multicolor\"\n               >\n                  <Icon name=\"file-download\" size=\"lg\" /> My VC\n               </Link>\n            </div>\n         </div>\n         <div className=\"hidden md:flex w-full top-0 left-0 mt-16 md:mt-0 md:left-auto md:relative z-50\">\n            <div className=\"w-full flex flex-row justify-end items-center z-50\">\n               {navs.map((nav, i) => (\n                  <NavButton\n                     ref={refs[i]}\n                     key={nav.label}\n                     isSection={active === i}\n                     onClick={() => refs[i].current.scrollIntoView({ behavior: \"smooth\" })}\n                     {...nav}\n                  />\n               ))}\n               <Link\n                  to=\"/files/M_DARY_NUR_RABBANI.pdf\"\n                  target=\"_blank\"\n                  download\n                  className=\"no-underline p-4 cursor-pointer text-sm text-right font-bold text-multicolor\"\n               >\n                  <Icon name=\"file-download\" size=\"lg\" /> My VC\n               </Link>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default memo(Nav)\n","import React, { memo, useState, useEffect, lazy, Suspense } from \"react\"\nimport { withRouter, Switch, Route } from \"react-router\"\n\nimport Icon from \"./Icon\"\n\nfunction ucfirst(x: string): string {\n   return x.charAt(0).toUpperCase() + x.slice(1)\n}\n\nconst Loading: React.FC = memo(() => (\n   <div className=\"w-full fixed left-0\" style={{ top: 100 }}>\n      <div className=\"flex justify-center\">\n         <Icon name=\"spinner-third\" size=\"2x\" spin className=\"text-multicolor\" />\n         &nbsp; loading...\n      </div>\n   </div>\n))\n\nconst LazyLoader = memo(\n   (props: any) => {\n      const [Page, setPage] = useState<any>(null)\n      const {\n         match: { params },\n         screenRef,\n      } = props\n\n      useEffect(() => {\n         switch (true) {\n            case !params.page:\n               const pageIntro = lazy(() => import(\"../pages/Spa\"))\n               setPage(pageIntro)\n               break\n            default:\n               const pageNav = lazy(() => import(`../pages/${params.page}/${ucfirst(params.page)}`))\n               setPage(pageNav)\n         }\n      }, [setPage, params])\n\n      return (\n         <div ref={screenRef} className=\"screen\" style={{ height: \"calc(100vh - 60px)\" }}>\n            <Suspense fallback={<Loading />}>{Page && <Page {...props} />}</Suspense>\n         </div>\n      )\n   },\n   (p, n) => p.location.pathname === n.location.pathname\n)\n\nconst Routes: React.FC<any> = router => {\n   const {\n      location,\n      location: { pathname },\n   } = router\n\n   return (\n      <Switch location={location}>\n         <Route\n            exact\n            path=\"/:page?/:action?/:id?/:option?\"\n            render={props => <LazyLoader key={pathname} {...{ ...props, ...router }} />}\n         />\n      </Switch>\n   )\n}\nexport default memo(withRouter(Routes))\n","import { createBrowserHistory } from \"history\"\n\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { memo, useEffect, useRef } from \"react\"\nimport { Router } from \"react-router\"\n\nimport Nav from \"./components/Nav\"\nimport Routes from \"./components/Routes\"\nimport history from \"./helpers/history\"\n\nconst Root: React.FC = () => {\n   const refs = [useRef(), useRef(), useRef(), useRef(), useRef()]\n   const screenRef = useRef()\n\n   useEffect(() => {\n      document.title = \"Muhammad Dary Nur Rabbani\"\n   })\n\n   return (\n      <Router history={history}>\n         <div className=\"w-full h-screen bg-white text-base text-gray-600 font-sans\">\n            <Nav {...{ refs, screenRef }} />\n            <div>\n               <Routes {...{ refs, screenRef }} />\n            </div>\n         </div>\n      </Router>\n   )\n}\n\nexport default memo(Root)\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./styles/tailwind.css\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React, { memo } from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { library, IconPrefix, IconName } from \"@fortawesome/fontawesome-svg-core\"\nimport {\n   faHandHeart,\n   faUserChart,\n   faIdBadge,\n   faTasks,\n   faSpinnerThird,\n   faHeart,\n   faPhoneLaptop,\n   faPencilRuler,\n   faBug,\n   faCode,\n   faStar,\n   faBracketsCurly,\n   faDesktop,\n   faServer,\n   faDatabase,\n   faFire,\n   faCopyright,\n   faEnvelope,\n   faBars,\n   faFileDownload,\n} from \"@fortawesome/pro-regular-svg-icons\"\nimport {\n   faReact,\n   faPhp,\n   faNode,\n   faJsSquare,\n   faVuejs,\n   faAngular,\n   faCss3Alt,\n   faSass,\n   faLess,\n   faCss3,\n   faBootstrap,\n   faWhatsapp,\n   faLinkedin,\n   faGithub,\n} from \"@fortawesome/free-brands-svg-icons\"\n\nlibrary.add(\n   faHandHeart,\n   faUserChart,\n   faIdBadge,\n   faTasks,\n   faSpinnerThird,\n   faHeart,\n   faReact,\n   faPhoneLaptop,\n   faPencilRuler,\n   faBug,\n   faCode,\n   faPhp,\n   faNode,\n   faJsSquare,\n   faVuejs,\n   faAngular,\n   faCss3Alt,\n   faSass,\n   faLess,\n   faStar,\n   faBracketsCurly,\n   faDesktop,\n   faCss3,\n   faServer,\n   faDatabase,\n   faBootstrap,\n   faFire,\n   faCopyright,\n   faWhatsapp,\n   faLinkedin,\n   faEnvelope,\n   faGithub,\n   faBars,\n   faFileDownload\n)\n\ninterface IIcon {\n   name: IconName\n   prefix?: IconPrefix\n   size?: \"xs\" | \"lg\" | \"sm\" | \"1x\" | \"2x\" | \"3x\" | \"4x\" | \"5x\" | \"6x\" | \"7x\" | \"8x\" | \"9x\" | \"10x\" | undefined\n   spin?: boolean\n   onClick?: () => void\n   className?: string\n   style?: object\n   alt?: string\n}\n\nconst Icon: React.FC<IIcon> = props => (\n   <FontAwesomeIcon {...props} icon={[props.prefix || \"far\", props.name]} title={props.alt} />\n)\n\nexport default memo(Icon, (p, n) => p.name === n.name)\n"],"sourceRoot":""}